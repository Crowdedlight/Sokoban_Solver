

solver

1. breath first
	add all diamond positions to openlist
	
	while(openlist)
		next pos from openlist
		what sides can robot go to
			Can robot push on that side?
		FOR pushable sides makes new pos for diamond, add to openlist
			check if newstep is deadlocked, then ignore and move on
			if manhattan distance to a goal is closer than current dist, push to 3rd pos of openlist
			if it is the same push_back openlist
			else push_back openlist
		check current step for won		
		save current step		
		add currentpos to closedlist
	assumed solution has been found. Go from goal pos though parents with the shortest distance from each goal

	(Optimization: think about if certain moves can be reordered and still be valid. so robot moves as little as possible)
		


DATA:
step = vec<diamonds>, robotpos, parent node, manhattan distance to goal 
